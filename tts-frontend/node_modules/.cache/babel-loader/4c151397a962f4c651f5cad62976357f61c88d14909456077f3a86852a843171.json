{"ast":null,"code":"const state = {\n  speakers: [],\n  models: [],\n  isLoading: false,\n  error: null\n};\nconst mutations = {\n  SET_SPEAKERS(state, speakers) {\n    state.speakers = speakers;\n  },\n  SET_MODELS(state, models) {\n    state.models = models;\n  },\n  SET_LOADING(state, isLoading) {\n    state.isLoading = isLoading;\n  },\n  SET_ERROR(state, error) {\n    state.error = error;\n  }\n};\nconst actions = {\n  async fetchSpeakers({\n    commit\n  }) {\n    try {\n      commit('SET_LOADING', true);\n      const response = await this.$api.getSpeakers();\n      if (response.success) {\n        commit('SET_SPEAKERS', response.speakers);\n      } else {\n        throw new Error(response.message || '获取说话人失败');\n      }\n    } catch (error) {\n      commit('SET_ERROR', error.message);\n      console.error('获取说话人失败:', error);\n    } finally {\n      commit('SET_LOADING', false);\n    }\n  },\n  async fetchModels({\n    commit\n  }) {\n    try {\n      commit('SET_LOADING', true);\n      const response = await this.$api.getModels();\n      if (response.success) {\n        // 简化模型数据，只保留名称和键\n        const simplifiedModels = Object.entries(response.models).map(([key, value]) => ({\n          key,\n          name: value.model_name || key\n        }));\n        commit('SET_MODELS', simplifiedModels);\n      } else {\n        throw new Error(response.message || '获取模型失败');\n      }\n    } catch (error) {\n      commit('SET_ERROR', error.message);\n      console.error('获取模型失败:', error);\n    } finally {\n      commit('SET_LOADING', false);\n    }\n  }\n};\nconst getters = {\n  speakers: state => state.speakers,\n  models: state => state.models,\n  isLoading: state => state.isLoading,\n  error: state => state.error\n};\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["state","speakers","models","isLoading","error","mutations","SET_SPEAKERS","SET_MODELS","SET_LOADING","SET_ERROR","actions","fetchSpeakers","commit","response","$api","getSpeakers","success","Error","message","console","fetchModels","getModels","simplifiedModels","Object","entries","map","key","value","name","model_name","getters","namespaced"],"sources":["/home/wxa/tts-system/tts-frontend/src/store/modules/tts.js"],"sourcesContent":["const state = {\n    speakers: [],\n    models: [],\n    isLoading: false,\n    error: null\n};\n\nconst mutations = {\n    SET_SPEAKERS(state, speakers) {\n        state.speakers = speakers;\n    },\n\n    SET_MODELS(state, models) {\n        state.models = models;\n    },\n\n    SET_LOADING(state, isLoading) {\n        state.isLoading = isLoading;\n    },\n\n    SET_ERROR(state, error) {\n        state.error = error;\n    }\n};\n\nconst actions = {\n    async fetchSpeakers({ commit }) {\n        try {\n            commit('SET_LOADING', true);\n            const response = await this.$api.getSpeakers();\n            if (response.success) {\n                commit('SET_SPEAKERS', response.speakers);\n            } else {\n                throw new Error(response.message || '获取说话人失败');\n            }\n        } catch (error) {\n            commit('SET_ERROR', error.message);\n            console.error('获取说话人失败:', error);\n        } finally {\n            commit('SET_LOADING', false);\n        }\n    },\n\n    async fetchModels({ commit }) {\n        try {\n            commit('SET_LOADING', true);\n            const response = await this.$api.getModels();\n            if (response.success) {\n                // 简化模型数据，只保留名称和键\n                const simplifiedModels = Object.entries(response.models).map(([key, value]) => ({\n                    key,\n                    name: value.model_name || key\n                }));\n                commit('SET_MODELS', simplifiedModels);\n            } else {\n                throw new Error(response.message || '获取模型失败');\n            }\n        } catch (error) {\n            commit('SET_ERROR', error.message);\n            console.error('获取模型失败:', error);\n        } finally {\n            commit('SET_LOADING', false);\n        }\n    }\n};\n\nconst getters = {\n    speakers: state => state.speakers,\n    models: state => state.models,\n    isLoading: state => state.isLoading,\n    error: state => state.error\n};\n\nexport default {\n    namespaced: true,\n    state,\n    mutations,\n    actions,\n    getters\n};"],"mappings":"AAAA,MAAMA,KAAK,GAAG;EACVC,QAAQ,EAAE,EAAE;EACZC,MAAM,EAAE,EAAE;EACVC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,SAAS,GAAG;EACdC,YAAYA,CAACN,KAAK,EAAEC,QAAQ,EAAE;IAC1BD,KAAK,CAACC,QAAQ,GAAGA,QAAQ;EAC7B,CAAC;EAEDM,UAAUA,CAACP,KAAK,EAAEE,MAAM,EAAE;IACtBF,KAAK,CAACE,MAAM,GAAGA,MAAM;EACzB,CAAC;EAEDM,WAAWA,CAACR,KAAK,EAAEG,SAAS,EAAE;IAC1BH,KAAK,CAACG,SAAS,GAAGA,SAAS;EAC/B,CAAC;EAEDM,SAASA,CAACT,KAAK,EAAEI,KAAK,EAAE;IACpBJ,KAAK,CAACI,KAAK,GAAGA,KAAK;EACvB;AACJ,CAAC;AAED,MAAMM,OAAO,GAAG;EACZ,MAAMC,aAAaA,CAAC;IAAEC;EAAO,CAAC,EAAE;IAC5B,IAAI;MACAA,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC;MAC3B,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC;MAC9C,IAAIF,QAAQ,CAACG,OAAO,EAAE;QAClBJ,MAAM,CAAC,cAAc,EAAEC,QAAQ,CAACZ,QAAQ,CAAC;MAC7C,CAAC,MAAM;QACH,MAAM,IAAIgB,KAAK,CAACJ,QAAQ,CAACK,OAAO,IAAI,SAAS,CAAC;MAClD;IACJ,CAAC,CAAC,OAAOd,KAAK,EAAE;MACZQ,MAAM,CAAC,WAAW,EAAER,KAAK,CAACc,OAAO,CAAC;MAClCC,OAAO,CAACf,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;IACpC,CAAC,SAAS;MACNQ,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC;IAChC;EACJ,CAAC;EAED,MAAMQ,WAAWA,CAAC;IAAER;EAAO,CAAC,EAAE;IAC1B,IAAI;MACAA,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC;MAC3B,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACC,IAAI,CAACO,SAAS,CAAC,CAAC;MAC5C,IAAIR,QAAQ,CAACG,OAAO,EAAE;QAClB;QACA,MAAMM,gBAAgB,GAAGC,MAAM,CAACC,OAAO,CAACX,QAAQ,CAACX,MAAM,CAAC,CAACuB,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,MAAM;UAC5ED,GAAG;UACHE,IAAI,EAAED,KAAK,CAACE,UAAU,IAAIH;QAC9B,CAAC,CAAC,CAAC;QACHd,MAAM,CAAC,YAAY,EAAEU,gBAAgB,CAAC;MAC1C,CAAC,MAAM;QACH,MAAM,IAAIL,KAAK,CAACJ,QAAQ,CAACK,OAAO,IAAI,QAAQ,CAAC;MACjD;IACJ,CAAC,CAAC,OAAOd,KAAK,EAAE;MACZQ,MAAM,CAAC,WAAW,EAAER,KAAK,CAACc,OAAO,CAAC;MAClCC,OAAO,CAACf,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;IACnC,CAAC,SAAS;MACNQ,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC;IAChC;EACJ;AACJ,CAAC;AAED,MAAMkB,OAAO,GAAG;EACZ7B,QAAQ,EAAED,KAAK,IAAIA,KAAK,CAACC,QAAQ;EACjCC,MAAM,EAAEF,KAAK,IAAIA,KAAK,CAACE,MAAM;EAC7BC,SAAS,EAAEH,KAAK,IAAIA,KAAK,CAACG,SAAS;EACnCC,KAAK,EAAEJ,KAAK,IAAIA,KAAK,CAACI;AAC1B,CAAC;AAED,eAAe;EACX2B,UAAU,EAAE,IAAI;EAChB/B,KAAK;EACLK,SAAS;EACTK,OAAO;EACPoB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}