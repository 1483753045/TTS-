{"ast":null,"code":"// store/modules/tts.js\nimport api from '@/services/api';\nexport default {\n  namespaced: true,\n  state: {\n    speakers: [],\n    models: [],\n    isLoading: false,\n    error: null\n  },\n  mutations: {\n    SET_SPEAKERS(state, speakers) {\n      // 确保始终设置为数组\n      state.speakers = Array.isArray(speakers) ? speakers : [];\n    },\n    SET_MODELS(state, models) {\n      state.models = Array.isArray(models) ? models : [];\n    },\n    SET_LOADING(state, isLoading) {\n      state.isLoading = isLoading;\n    },\n    SET_ERROR(state, error) {\n      state.error = error;\n    }\n  },\n  actions: {\n    async fetchSpeakers({\n      commit\n    }) {\n      commit('SET_LOADING', true);\n      commit('SET_ERROR', null);\n      try {\n        const response = await api.getSpeakers();\n\n        // 确保响应结构正确\n        if (response.data && response.data.success) {\n          // 确保speakers是数组\n          const speakers = response.data.speakers;\n          if (Array.isArray(speakers)) {\n            commit('SET_SPEAKERS', speakers);\n          } else {\n            // 如果不是数组，尝试转换或使用默认值\n            console.warn('API返回的speakers不是数组，尝试转换:', speakers);\n            commit('SET_SPEAKERS', speakers ? [speakers] : ['default']);\n          }\n        } else {\n          throw new Error(response.data?.message || 'API响应格式错误');\n        }\n      } catch (error) {\n        console.error('获取说话人失败:', error);\n        commit('SET_ERROR', error.message);\n        // 使用默认说话人列表\n        commit('SET_SPEAKERS', ['default']);\n      } finally {\n        commit('SET_LOADING', false);\n      }\n    },\n    async fetchModels({\n      commit\n    }) {\n      commit('SET_LOADING', true);\n      commit('SET_ERROR', null);\n      try {\n        const response = await api.getModels();\n        if (response.data && response.data.success) {\n          const models = response.data.models;\n          if (Array.isArray(models)) {\n            commit('SET_MODELS', models);\n          } else {\n            console.warn('API返回的models不是数组，尝试转换:', models);\n            commit('SET_MODELS', models ? [models] : ['default']);\n          }\n        } else {\n          throw new Error(response.data?.message || 'API响应格式错误');\n        }\n      } catch (error) {\n        console.error('获取模型失败:', error);\n        commit('SET_ERROR', error.message);\n        commit('SET_MODELS', ['default']);\n      } finally {\n        commit('SET_LOADING', false);\n      }\n    }\n  },\n  getters: {\n    speakers: state => state.speakers,\n    models: state => state.models,\n    isLoading: state => state.isLoading,\n    error: state => state.error\n  }\n};","map":{"version":3,"names":["api","namespaced","state","speakers","models","isLoading","error","mutations","SET_SPEAKERS","Array","isArray","SET_MODELS","SET_LOADING","SET_ERROR","actions","fetchSpeakers","commit","response","getSpeakers","data","success","console","warn","Error","message","fetchModels","getModels","getters"],"sources":["/home/wxa/tts-system/tts-frontend/src/store/modules/tts.js"],"sourcesContent":["// store/modules/tts.js\nimport api from '@/services/api';\n\nexport default {\n    namespaced: true,\n    state: {\n        speakers: [],\n        models: [],\n        isLoading: false,\n        error: null\n    },\n    mutations: {\n        SET_SPEAKERS(state, speakers) {\n            // 确保始终设置为数组\n            state.speakers = Array.isArray(speakers) ? speakers : [];\n        },\n        SET_MODELS(state, models) {\n            state.models = Array.isArray(models) ? models : [];\n        },\n        SET_LOADING(state, isLoading) {\n            state.isLoading = isLoading;\n        },\n        SET_ERROR(state, error) {\n            state.error = error;\n        }\n    },\n    actions: {\n        async fetchSpeakers({ commit }) {\n            commit('SET_LOADING', true);\n            commit('SET_ERROR', null);\n\n            try {\n                const response = await api.getSpeakers();\n\n                // 确保响应结构正确\n                if (response.data && response.data.success) {\n                    // 确保speakers是数组\n                    const speakers = response.data.speakers;\n\n                    if (Array.isArray(speakers)) {\n                        commit('SET_SPEAKERS', speakers);\n                    } else {\n                        // 如果不是数组，尝试转换或使用默认值\n                        console.warn('API返回的speakers不是数组，尝试转换:', speakers);\n                        commit('SET_SPEAKERS', speakers ? [speakers] : ['default']);\n                    }\n                } else {\n                    throw new Error(response.data?.message || 'API响应格式错误');\n                }\n            } catch (error) {\n                console.error('获取说话人失败:', error);\n                commit('SET_ERROR', error.message);\n                // 使用默认说话人列表\n                commit('SET_SPEAKERS', ['default']);\n            } finally {\n                commit('SET_LOADING', false);\n            }\n        },\n\n        async fetchModels({ commit }) {\n            commit('SET_LOADING', true);\n            commit('SET_ERROR', null);\n\n            try {\n                const response = await api.getModels();\n\n                if (response.data && response.data.success) {\n                    const models = response.data.models;\n\n                    if (Array.isArray(models)) {\n                        commit('SET_MODELS', models);\n                    } else {\n                        console.warn('API返回的models不是数组，尝试转换:', models);\n                        commit('SET_MODELS', models ? [models] : ['default']);\n                    }\n                } else {\n                    throw new Error(response.data?.message || 'API响应格式错误');\n                }\n            } catch (error) {\n                console.error('获取模型失败:', error);\n                commit('SET_ERROR', error.message);\n                commit('SET_MODELS', ['default']);\n            } finally {\n                commit('SET_LOADING', false);\n            }\n        }\n    },\n    getters: {\n        speakers: state => state.speakers,\n        models: state => state.models,\n        isLoading: state => state.isLoading,\n        error: state => state.error\n    }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}