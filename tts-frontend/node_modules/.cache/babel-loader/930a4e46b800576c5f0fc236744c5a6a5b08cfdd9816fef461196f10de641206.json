{"ast":null,"code":"import axios from 'axios';\n\n// 创建 axios 实例\nconst api = axios.create({\n  baseURL: process.env.VUE_APP_API_URL || 'http://localhost:8000',\n  timeout: 30000,\n  // 30秒超时\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// API 方法\nexport default {\n  // TTS 相关\n  generateTTS(data) {\n    return api.post('/api/tts/generate', data).then(response => response.data);\n  },\n  getSpeakers() {\n    return api.get('/api/tts/speakers').then(response => response.data);\n  },\n  getModels() {\n    return api.get('/api/tts/models').then(response => response.data);\n  },\n  // 语音克隆相关\n  cloneVoice(data) {\n    return api.post('/api/voice-clone/generate', data).then(response => response.data);\n  },\n  uploadSample(file) {\n    const formData = new FormData();\n    formData.append('file', file);\n    return api.post('/api/voice-clone/upload-sample', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => response.data);\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","process","env","VUE_APP_API_URL","timeout","headers","generateTTS","data","post","then","response","getSpeakers","get","getModels","cloneVoice","uploadSample","file","formData","FormData","append"],"sources":["/home/wxa/tts-system/tts-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// 创建 axios 实例\nconst api = axios.create({\n    baseURL: process.env.VUE_APP_API_URL || 'http://localhost:8000',\n    timeout: 30000, // 30秒超时\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\n// API 方法\nexport default {\n    // TTS 相关\n    generateTTS(data) {\n        return api.post('/api/tts/generate', data)\n            .then(response => response.data);\n    },\n\n    getSpeakers() {\n        return api.get('/api/tts/speakers')\n            .then(response => response.data);\n    },\n\n    getModels() {\n        return api.get('/api/tts/models')\n            .then(response => response.data);\n    },\n\n    // 语音克隆相关\n    cloneVoice(data) {\n        return api.post('/api/voice-clone/generate', data)\n            .then(response => response.data);\n    },\n\n    uploadSample(file) {\n        const formData = new FormData();\n        formData.append('file', file);\n\n        return api.post('/api/voice-clone/upload-sample', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }).then(response => response.data);\n    }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,eAAe,IAAI,uBAAuB;EAC/DC,OAAO,EAAE,KAAK;EAAE;EAChBC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACA,eAAe;EACX;EACAC,WAAWA,CAACC,IAAI,EAAE;IACd,OAAOT,GAAG,CAACU,IAAI,CAAC,mBAAmB,EAAED,IAAI,CAAC,CACrCE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACH,IAAI,CAAC;EACxC,CAAC;EAEDI,WAAWA,CAAA,EAAG;IACV,OAAOb,GAAG,CAACc,GAAG,CAAC,mBAAmB,CAAC,CAC9BH,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACH,IAAI,CAAC;EACxC,CAAC;EAEDM,SAASA,CAAA,EAAG;IACR,OAAOf,GAAG,CAACc,GAAG,CAAC,iBAAiB,CAAC,CAC5BH,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACH,IAAI,CAAC;EACxC,CAAC;EAED;EACAO,UAAUA,CAACP,IAAI,EAAE;IACb,OAAOT,GAAG,CAACU,IAAI,CAAC,2BAA2B,EAAED,IAAI,CAAC,CAC7CE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACH,IAAI,CAAC;EACxC,CAAC;EAEDQ,YAAYA,CAACC,IAAI,EAAE;IACf,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAE7B,OAAOlB,GAAG,CAACU,IAAI,CAAC,gCAAgC,EAAES,QAAQ,EAAE;MACxDZ,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC,CAACI,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACH,IAAI,CAAC;EACtC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}